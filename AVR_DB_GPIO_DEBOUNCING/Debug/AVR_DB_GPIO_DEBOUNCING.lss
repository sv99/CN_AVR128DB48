
AVR_DB_GPIO_DEBOUNCING.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  00000234  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000234  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000264  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003a6b  00000000  00000000  000002fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002e1c  00000000  00000000  00003d67  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000040a  00000000  00000000  00006b83  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000dc  00000000  00000000  00006f90  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000024df  00000000  00000000  0000706c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000cb  00000000  00000000  0000954b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00009616  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
   c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  10:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  14:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  18:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  1c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  20:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  24:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  28:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  2c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  30:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  34:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  38:	0c 94 b9 00 	jmp	0x172	; 0x172 <__vector_14>
  3c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  40:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  44:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  48:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  4c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  50:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  54:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  58:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  5c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  60:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  64:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  68:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  6c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  70:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  74:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  78:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  7c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  80:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  84:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  88:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  8c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  90:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  94:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  98:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  9c:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  a8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ac:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  b8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  bc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  c8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  cc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  d8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  dc:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e4:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  e8:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  ec:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>
  f0:	0c 94 84 00 	jmp	0x108	; 0x108 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62
 100:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <main>
 104:	0c 94 ee 00 	jmp	0x1dc	; 0x1dc <_exit>

00000108 <__bad_interrupt>:
 108:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010c <PORT_init>:
static void BUTTON_releaseCallback(void);
static void BUTTON_pressCallback(void);

static void PORT_init(void)
{
    LED_PORT.DIRSET = LED_PIN_bm;
 10c:	e0 e2       	ldi	r30, 0x20	; 32
 10e:	f4 e0       	ldi	r31, 0x04	; 4
 110:	88 e0       	ldi	r24, 0x08	; 8
 112:	81 83       	std	Z+1, r24	; 0x01
    LED_PORT.OUTSET = LED_PIN_bm;
 114:	85 83       	std	Z+5, r24	; 0x05

    BUTTON_PORT.DIRCLR = BUTTON_PIN_bm;
 116:	84 e0       	ldi	r24, 0x04	; 4
 118:	82 83       	std	Z+2, r24	; 0x02
    BUTTON_CTRL |= PORT_PULLUPEN_bm;
 11a:	82 89       	ldd	r24, Z+18	; 0x12
 11c:	88 60       	ori	r24, 0x08	; 8
 11e:	82 8b       	std	Z+18, r24	; 0x12
 120:	08 95       	ret

00000122 <EVSYS_init>:
}

static void EVSYS_init(void)
{
    EVSYS.CHANNEL0 = EVSYS_CHANNEL0_PORTB_PIN2_gc;
 122:	e0 e0       	ldi	r30, 0x00	; 0
 124:	f2 e0       	ldi	r31, 0x02	; 2
 126:	8a e4       	ldi	r24, 0x4A	; 74
 128:	80 8b       	std	Z+16, r24	; 0x10
    EVSYS.USERTCB0CAPT = EVSYS_USER_CHANNEL0_gc;
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	86 af       	std	Z+62, r24	; 0x3e
 12e:	08 95       	ret

00000130 <TIMER_0_init>:
}

static void TIMER_0_init(void)
{
    TCB0.CCMP = TOP_VALUE;
 130:	e0 e0       	ldi	r30, 0x00	; 0
 132:	fb e0       	ldi	r31, 0x0B	; 11
 134:	8f ef       	ldi	r24, 0xFF	; 255
 136:	9f ef       	ldi	r25, 0xFF	; 255
 138:	84 87       	std	Z+12, r24	; 0x0c
 13a:	95 87       	std	Z+13, r25	; 0x0d
    TCB0.CTRLB = TCB_CNTMODE_SINGLE_gc;
 13c:	26 e0       	ldi	r18, 0x06	; 6
 13e:	21 83       	std	Z+1, r18	; 0x01
    TCB0.EVCTRL = TCB_CAPTEI_bm | TCB_EDGE_bm;
 140:	21 e1       	ldi	r18, 0x11	; 17
 142:	24 83       	std	Z+4, r18	; 0x04
    TCB0.CTRLA = TCB_CLKSEL0_bm | TCB_ENABLE_bm;
 144:	23 e0       	ldi	r18, 0x03	; 3
 146:	20 83       	st	Z, r18
    TCB0.CNT = TOP_VALUE;
 148:	82 87       	std	Z+10, r24	; 0x0a
 14a:	93 87       	std	Z+11, r25	; 0x0b
    TCB0.INTCTRL = TCB_CAPT_bm;
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	85 83       	std	Z+5, r24	; 0x05
 150:	08 95       	ret

00000152 <SYSTEM_init>:
}

static void SYSTEM_init(void)
{
    PORT_init();
 152:	0e 94 86 00 	call	0x10c	; 0x10c <PORT_init>
    EVSYS_init();
 156:	0e 94 91 00 	call	0x122	; 0x122 <EVSYS_init>
    TIMER_0_init();
 15a:	0e 94 98 00 	call	0x130	; 0x130 <TIMER_0_init>

    sei();
 15e:	78 94       	sei
 160:	08 95       	ret

00000162 <BUTTON_releaseCallback>:
}

static void BUTTON_releaseCallback(void)
{
    LED_PORT.OUTSET = LED_PIN_bm;
 162:	88 e0       	ldi	r24, 0x08	; 8
 164:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <__TEXT_REGION_LENGTH__+0x7e0425>
 168:	08 95       	ret

0000016a <BUTTON_pressCallback>:
}

static void BUTTON_pressCallback(void)
{
    LED_PORT.OUTCLR = LED_PIN_bm;
 16a:	88 e0       	ldi	r24, 0x08	; 8
 16c:	80 93 26 04 	sts	0x0426, r24	; 0x800426 <__TEXT_REGION_LENGTH__+0x7e0426>
 170:	08 95       	ret

00000172 <__vector_14>:
}

ISR(TCB0_INT_vect)
{
 172:	1f 92       	push	r1
 174:	0f 92       	push	r0
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	0f 92       	push	r0
 17a:	11 24       	eor	r1, r1
 17c:	0b b6       	in	r0, 0x3b	; 59
 17e:	0f 92       	push	r0
 180:	2f 93       	push	r18
 182:	3f 93       	push	r19
 184:	4f 93       	push	r20
 186:	5f 93       	push	r21
 188:	6f 93       	push	r22
 18a:	7f 93       	push	r23
 18c:	8f 93       	push	r24
 18e:	9f 93       	push	r25
 190:	af 93       	push	r26
 192:	bf 93       	push	r27
 194:	ef 93       	push	r30
 196:	ff 93       	push	r31
    if (BUTTON_PORT.IN & BUTTON_PIN_bm) {
 198:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <__TEXT_REGION_LENGTH__+0x7e0428>
 19c:	82 ff       	sbrs	r24, 2
 19e:	03 c0       	rjmp	.+6      	; 0x1a6 <__vector_14+0x34>
        BUTTON_releaseCallback();
 1a0:	0e 94 b1 00 	call	0x162	; 0x162 <BUTTON_releaseCallback>
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__vector_14+0x38>
    } else {
        BUTTON_pressCallback();
 1a6:	0e 94 b5 00 	call	0x16a	; 0x16a <BUTTON_pressCallback>
    }

    TCB0.INTFLAGS = TCB_CAPT_bm;
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
}
 1b0:	ff 91       	pop	r31
 1b2:	ef 91       	pop	r30
 1b4:	bf 91       	pop	r27
 1b6:	af 91       	pop	r26
 1b8:	9f 91       	pop	r25
 1ba:	8f 91       	pop	r24
 1bc:	7f 91       	pop	r23
 1be:	6f 91       	pop	r22
 1c0:	5f 91       	pop	r21
 1c2:	4f 91       	pop	r20
 1c4:	3f 91       	pop	r19
 1c6:	2f 91       	pop	r18
 1c8:	0f 90       	pop	r0
 1ca:	0b be       	out	0x3b, r0	; 59
 1cc:	0f 90       	pop	r0
 1ce:	0f be       	out	0x3f, r0	; 63
 1d0:	0f 90       	pop	r0
 1d2:	1f 90       	pop	r1
 1d4:	18 95       	reti

000001d6 <main>:

int main(void)
{
    SYSTEM_init();
 1d6:	0e 94 a9 00 	call	0x152	; 0x152 <SYSTEM_init>
 1da:	ff cf       	rjmp	.-2      	; 0x1da <main+0x4>

000001dc <_exit>:
 1dc:	f8 94       	cli

000001de <__stop_program>:
 1de:	ff cf       	rjmp	.-2      	; 0x1de <__stop_program>
